<application>
  <component name="CosySettings">
    <option name="manualOpenLocalModel" value="true" />
    <option name="methodQuickSwitchEnum" value="DISABLED" />
    <option name="parameter">
      <ChangeUserSettingParams>
        <option name="allowReportUsage" value="true" />
        <option name="cloud">
          <CloudModelParam>
            <option name="autoTrigger">
              <CloudModelAutoTrigger>
                <option name="enable" value="true" />
                <option name="generateLength" value="level_1" />
                <option name="modelLevel" value="large" />
              </CloudModelAutoTrigger>
            </option>
            <option name="enable" value="true" />
            <option name="manualTrigger">
              <CloudModelManualTrigger>
                <option name="generateLength" value="level_2" />
                <option name="modelLevel" value="large" />
              </CloudModelManualTrigger>
            </option>
          </CloudModelParam>
        </option>
        <option name="local">
          <LocalModelParam>
            <option name="enable" value="true" />
            <option name="inferenceMode" value="auto" />
            <option name="maxCandidateNum" value="3" />
          </LocalModelParam>
        </option>
      </ChangeUserSettingParams>
    </option>
    <option name="recentQueries">
      <map>
        <entry key="DB-GPT|1341095376173142">
          <value>
            <list>
              <option value="/explain code" />
              <option value="python获取接口中 headers参数值" />
              <option value="fastapi 获取headers参数值" />
              <option value="python else if" />
            </list>
          </value>
        </entry>
        <entry key="Kele-Bingtang.github.io|1341095376173142">
          <value>
            <list>
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="RuoYi-Vue|1341095376173142">
          <value>
            <list>
              <option value="/explain code" />
              <option value="process.env.port如何配置" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="dify|1341095376173142">
          <value>
            <list>
              <option value="/explain code" />
              <option value="Not a valid PEM pre boundary" />
              <option value="python redis存入对象并取出" />
              <option value="python redis存入对象类并取出" />
              <option value="RuntimeError: Working outside of application context.&#10;&#10;This typically means that you attempted to use functionality that needed&#10;the current application. To solve this, set up an application context&#10;with app.app_context(). See the documentation for more information" />
              <option value="your_flask_app是什么" />
              <option value="python post请求" />
              <option value="args: dict添加值" />
              <option value="App新建一个对象类并赋值" />
              <option value="TypeError: Object of type User is not JSON serializable" />
              <option value="Object of type datetime is not JSON serializable" />
              <option value="flask.json如何处理" />
              <option value="flask 对象类datetime字段 json序列化" />
              <option value="'dict' object转为对象类" />
              <option value="/explain code" />
              <option value="task events: OFF (enable -E to monitor tasks in this worker)" />
              <option value="写一个包含用户账号和密码的登录网页" />
              <option value="请把登录按钮修改为橘色的药丸形状" />
              <option value="/explain code" />
              <option value="如何修改为超出部分不隐藏，全部显示呢" />
            </list>
          </value>
        </entry>
        <entry key="langchain3|1341095376173142">
          <value>
            <list>
              <option value="python 获取网址文本内容和网页标题" />
              <option value="python 生成时间戳" />
              <option value="/generate optimization" />
              <option value="def upload_temp_file(&#10;        files: List[UploadFile] = File(..., description=&quot;上传文件，支持多文件&quot;, require=False),&#10;        web_links: List[str] = Form([], description=&quot;在线网址链接,支持多链接&quot;),&#10;        prev_id: str = Form(None, description=&quot;前知识库ID&quot;),&#10;files改为非必传参数" />
              <option value="numpy.AxisError: axis 1 is out of bounds for array of dimension 1是啥问题" />
              <option value="python 读取网页文本内容" />
              <option value="ModuleNotFoundError(&quot;No module named 'faiss.swigfaiss_avx512'&quot;)" />
              <option value="Could not load library with AVX512 support是啥意思" />
              <option value="response.content和response.text有啥区别" />
              <option value="/explain code" />
              <option value="documents = [] python判断documents为空" />
              <option value="ERROR: RecursionError: 文件分割报错：maximum recursion depth exceeded in comparison" />
              <option value="RecursionError: 文件分割报错：cannot set the recursion limit to 10 at the recursion depth 11: the limit is too low" />
              <option value="ERROR: RecursionError: 文件分割报错：maximum recursion depth exceeded in comparison" />
              <option value="Python默认的最大递归深度是多少" />
              <option value="TypeError: slice indices must be integers or None or have an __index__ method" />
              <option value="{&#10;&quot;id&quot;: &quot;6276ef81-6e7b-4259-8fd7-67140cb4c1bc&quot;,&#10;&quot;object&quot;: &quot;chat.completion&quot;,&#10;&quot;created&quot;: 1725875463,&#10;&quot;model&quot;: &quot;proxyllm&quot;,&#10;&quot;choices&quot;: [&#10;    {&#10;        &quot;index&quot;: 0,&#10;        &quot;message&quot;: {&#10;            &quot;role&quot;: &quot;assistant&quot;,&#10;            &quot;content&quot;: &quot;首先，我需要通过用户参数表(user_parameter)找到id为1的用户id。然后，使用这个用户id找到关联的助理问答表(assistant_qa)中的名字。\\n&lt;chart-view content=\&quot;{\&quot;type\&quot;: \&quot;response_data_text\&quot;, \&quot;sql\&quot;: \&quot;SELECT a.name FROM assistant_qa a JOIN user_parameter u ON a.user_id = u.user_id WHERE u.id = 1;\&quot;, \&quot;data\&quot;: [{\&quot;name\&quot;: \&quot;一个助理\&quot;}, {\&quot;name\&quot;: \&quot;而是\&quot;}]}\&quot; /&gt;&quot;&#10;        },&#10;        &quot;finish_reason&quot;: null&#10;    }&#10;],&#10;&quot;usage&quot;: {&#10;    &quot;prompt_tokens&quot;: 0,&#10;    &quot;total_tokens&quot;: 0,&#10;    &quot;completion_tokens&quot;: 0&#10;}&#10;}&#10;python解析上述json中的content字段值" />
              <option value="首先，我需要找到用户参数id为1的用户id。然后，使用这个用户id找到关联的助理问答记录中的名字。我将通过连接user_parameter和assistant_qa表来实现这一查询，限制结果数量为50。\n&lt;chart-view content=&quot;{&quot;type&quot;: &quot;response_data_text&quot;, &quot;sql&quot;: &quot;SELECT a.name FROM assistant_qa a JOIN user_parameter u ON a.user_id = u.user_id WHERE u.id = 1 LIMIT 50;&quot;, &quot;data&quot;: [{&quot;name&quot;: &quot;一个助理&quot;}, {&quot;name&quot;: &quot;而是&quot;}]}&quot; /&gt;&#10;python提取上述字符中content字段值" />
              <option value="首先，我需要找到用户参数id为1的用户id。然后，使用这个用户id找到关联的助理问答记录中的名字。我将通过连接user_parameter和assistant_qa表来实现这一查询，限制结果数量为50。\n&lt;chart-view content=&quot;{&quot;type&quot;: &quot;response_data_text&quot;, &quot;sql&quot;: &quot;SELECT a.name FROM assistant_qa a JOIN user_parameter u ON a.user_id = u.user_id WHERE u.id = 1 LIMIT 50;&quot;, &quot;data&quot;: [{&quot;name&quot;: &quot;一个助理&quot;}, {&quot;name&quot;: &quot;而是&quot;}]}&quot; /&gt; &#10;python提取上述字符中content中的json值" />
              <option value="python 字符串截取指定字符中间的值" />
            </list>
          </value>
        </entry>
        <entry key="vuepress-theme-vdoing|1341095376173142">
          <value>
            <list>
              <option value="/explain code" />
              <option value="Dynamic require of &quot;path&quot; is not supported" />
              <option value="#00A55A是什么颜色" />
              <option value="黑色是啥代号" />
              <option value="var time = new Date();&#10;        ctx.drawImage(timeBeat, 0, 0);&#10;        // ctx.fillRect(-90, 320, 200, 2);&#10;        // ctx.fillText(&#10;        //   (time.getHours() &lt; 10 ? &quot;0&quot; : &quot;&quot;) +&#10;        //     time.getHours().toString() +&#10;        //     &quot;:&quot; +&#10;        //     (time.getMinutes() &lt; 10 ? &quot;0&quot; : &quot;&quot;) +&#10;        //     time.getMinutes() +&#10;        //     &quot;:&quot; +&#10;        //     (time.getSeconds() &lt; 10 ? &quot;0&quot; : &quot;&quot;) +&#10;        //     time.getSeconds().toString(),&#10;        //   725,&#10;        //   318&#10;        // );&#10;        // ctx.drawImage(rili, 0, 0);&#10;        ctx.resetTransform();&#10;调整timeBeat位置和大小" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="showInlineAcceptTips" value="false" />
  </component>
</application>