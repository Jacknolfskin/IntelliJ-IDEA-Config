<application>
  <component name="CosySettings">
    <option name="manualOpenLocalModel" value="true" />
    <option name="methodQuickSwitchEnum" value="DISABLED" />
    <option name="parameter">
      <ChangeUserSettingParams>
        <option name="allowReportUsage" value="true" />
        <option name="cloud">
          <CloudModelParam>
            <option name="autoTrigger">
              <CloudModelAutoTrigger>
                <option name="enable" value="true" />
                <option name="generateLength" value="level_1" />
                <option name="modelLevel" value="large" />
              </CloudModelAutoTrigger>
            </option>
            <option name="enable" value="true" />
            <option name="manualTrigger">
              <CloudModelManualTrigger>
                <option name="generateLength" value="level_2" />
                <option name="modelLevel" value="large" />
              </CloudModelManualTrigger>
            </option>
          </CloudModelParam>
        </option>
        <option name="local">
          <LocalModelParam>
            <option name="enable" value="true" />
            <option name="inferenceMode" value="auto" />
            <option name="maxCandidateNum" value="3" />
          </LocalModelParam>
        </option>
      </ChangeUserSettingParams>
    </option>
    <option name="recentQueries">
      <map>
        <entry key="RuoYi-Vue|1341095376173142">
          <value>
            <list>
              <option value="/explain code" />
              <option value="process.env.port如何配置" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="dify|1341095376173142">
          <value>
            <list>
              <option value="/explain code" />
              <option value="Not a valid PEM pre boundary" />
              <option value="python redis存入对象并取出" />
              <option value="python redis存入对象类并取出" />
              <option value="RuntimeError: Working outside of application context.&#10;&#10;This typically means that you attempted to use functionality that needed&#10;the current application. To solve this, set up an application context&#10;with app.app_context(). See the documentation for more information" />
              <option value="your_flask_app是什么" />
              <option value="python post请求" />
              <option value="args: dict添加值" />
              <option value="App新建一个对象类并赋值" />
              <option value="TypeError: Object of type User is not JSON serializable" />
              <option value="Object of type datetime is not JSON serializable" />
              <option value="flask.json如何处理" />
              <option value="flask 对象类datetime字段 json序列化" />
              <option value="'dict' object转为对象类" />
              <option value="/explain code" />
              <option value="task events: OFF (enable -E to monitor tasks in this worker)" />
              <option value="写一个包含用户账号和密码的登录网页" />
              <option value="请把登录按钮修改为橘色的药丸形状" />
              <option value="/explain code" />
              <option value="如何修改为超出部分不隐藏，全部显示呢" />
            </list>
          </value>
        </entry>
        <entry key="langchain3|1341095376173142">
          <value>
            <list>
              <option value="TypeError: search_knowledge_base() takes 5 positional arguments but 6 were given" />
              <option value="is_square: bool = Body(True), 默认为false" />
              <option value="/explain code" />
              <option value="from collections import defaultdict&#10;&#10;&#10;class Multimap(defaultdict):&#10;    def __init__(self):&#10;        super().__init__(list)  # 使用列表作为默认值&#10;&#10;    def add(self, key, value):&#10;        self[key].append(value)  # 添加值到映射的列表中&#10;&#10;    def get(self, key):&#10;        return self[key]  # 获取映射的值列表&#10;&#10;    def remove(self, key, value):&#10;        self[key].remove(value)  # 从映射的列表中移除值&#10;&#10;&#10;# 使用Multimap&#10;mymap = Multimap()&#10;mymap.add('fruit', 'apple')&#10;mymap.add('fruit', 'banana')&#10;mymap.add('vegetable', 'carrot')&#10;&#10;print(mymap.get('fruit'))  # 输出: ['apple', 'banana']&#10;print(mymap.get('vegetable'))  # 输出: ['carrot']&#10;&#10;mymap.remove('fruit', 'apple')&#10;print(mymap.get('fruit'))  # 输出: ['banana']&#10;遍历multimap key值" />
              <option value="python创建一个包含str,list类型字段的对象并赋值，之后将这个对象加入list对象" />
              <option value="/explain code" />
              <option value="You need to have sentencepiece installed to convert a slow tokenizer to a fast one" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="showInlineAcceptTips" value="false" />
  </component>
</application>